# Builds Betaflight Firmware.
#

name: CI

on:
  workflow_call:
    inputs:
      release_build:
        description: 'Specifies if it is a build that should include commit hash in hex file names or not'
        default: false
        required: false
        type: boolean

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      targets: ${{ steps.get-targets.outputs.targets }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache build toolchain
        uses: actions/cache@v4
        id: cache-toolchain
        with:
          path: tools
          key: ${{ runner.os }}-${{ hashFiles('mk/tools.mk') }}

      - name: Download and install toolchain
        if: steps.cache-toolchain.outputs.cache-hit != 'true'
        run: make arm_sdk_install

      - name: Hydrate configuration
        id: get-config
        run: make configs

      - name: Get all official build targets
        id: get-targets
        run: echo "targets=$(make targets-ci-print | jq -R -c 'split(" ")')" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: ${{ fromJson(needs.setup.outputs.targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch toolchain from cache
        uses: actions/cache@v4
        id: cache-toolchain
        with:
          path: tools
          key: ${{ runner.os }}-${{ hashFiles('mk/tools.mk') }}

      - name: Hydrate configuration
        id: get-config
        run: make configs

      - name: Build target (without revision)
        if: inputs.release_build == true
        run: make EXTRA_FLAGS="-D'BUILD_KEY=3b60871dcb07e8036a29b40b9f439f75' -D'RELEASE_NAME=4.6.0-dev' -DCLOUD_BUILD -DUSE_ACRO_TRAINER -DUSE_DSHOT -DUSE_GPS -DUSE_GPS_PLUS_CODES -DUSE_LED_STRIP -DUSE_OSD -DUSE_OSD_HD -DUSE_OSD_SD -DUSE_PINIO -DUSE_SERIALRX -DUSE_SERIALRX_CRSF -DUSE_TELEMETRY -DUSE_TELEMETRY_CRSF -DUSE_VTX" ${{ matrix.target }}

      - name: Build target (with revision)
        if: inputs.release_build == false
        run: make EXTRA_FLAGS="-D'BUILD_KEY=3b60871dcb07e8036a29b40b9f439f75' -D'RELEASE_NAME=4.6.0-dev' -DCLOUD_BUILD -DUSE_ACRO_TRAINER -DUSE_DSHOT -DUSE_GPS -DUSE_GPS_PLUS_CODES -DUSE_LED_STRIP -DUSE_OSD -DUSE_OSD_HD -DUSE_OSD_SD -DUSE_PINIO -DUSE_SERIALRX -DUSE_SERIALRX_CRSF -DUSE_TELEMETRY -DUSE_TELEMETRY_CRSF -DUSE_VTX" ${{ matrix.target }}_rev

      - name: Publish build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: obj/*.hex
          retention-days: 60

  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y libblocksruntime-dev clang-15

      - name: Run sanity checks
        run: make EXTRA_FLAGS=-Werror checks

      - name: Run all unit tests
        run: make EXTRA_FLAGS=-Werror test-all

  result:
    name: Complete
    needs: [build, test]
    if: ${{ always() }}
    runs-on: ubuntu-22.04
    steps:
      - name: Check build matrix result
        if: ${{ needs.build.result != 'success' }}
        run: exit 1

      - name: Check test result
        if: ${{ needs.test.result != 'success' }}
        run: exit 1
